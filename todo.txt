Copyright (C) 2011 Kyle Evans <kyledevans@gmail.com>

Released under the GPL version 2 only.

-------------------------------------------------------

2.  Possible feature is to be able to combine patients into 1.  IE: the clerk fails to find the existing patient record when filling a prescription and instead creates a duplicate patient record.

4.  Need to be able to print new barcodes after a shipment has been registered in the database.  IE: The barcodes are destroyed somehow.

7.  Every time the user does something that changes information on the database, post a message to the status bar at the bottom.

8.  The application needs to always indicate whether or not it is connected to the database.

12.  Combine the prescribers and pharmacists tables into 1

13.  Need to add some usage documentation and help.
	- Adding/modifying a patient
	- Adding a prescription
	- Adding new/modifying formulary
	- Adding new/modifying inventory
	- Search for patients
	- Search for prescriptions
	- Search formulations
	- Search inventory
	- Search pharmacists
	- Search prescribers

15.  Remove the ability to modify anything (possible exception being patients)
	- It will make the prescription log be inacurate if say the name of a medication is changed after the prescription has been given.

16.  Every time a search is done, make sure the resultTable is reset even when there are zero hits.

-----
1.1 TODO List (and wishlist)

1.  Some maintenance stuff (do in order):
	- Make database record classes no longer QObjects
	- Rename MedicationRecord to DrugRecord
	- Rename the tab classes consistently
	- Rename the wizards in a consistent manner
	- Rename the wizard pages in a consistent manner
	- Move the wizards into 1 "wizard" directory
	- Move the database record classes into 1 "database" directory

2.  Make database record classes use accessors/mutators instead of public members

3.  Document the database record classes in a way similar to how Qt documents
	- Need to use Doxygen which then can create documentation files for Qt Assistant and Qt Creator

4.  Make resultTables easily sortable

5.  Make simple display widgets for the database record classes.  All fields will be displayed.

6.  Where appropriate, indicate that database records are unusable by use of the color red.  How this is done will vary.
	- IE: When doing a search in the Formulary tab, inactive medications could have a red arrow or marker in the _row_ header along with possibly highlighting the field that is causing the problem.

7.  When there is no inventory, searches should display a '0' instead of nothing at all.

8.  Consider adding a new table called write_offs that will replace the shipments.write_off column.  write_offs could have the following columns:
	- id
	- shipment_id
	- amount_written_off

9.  Add verification routines. IE: A SQL function that adds up the prescriptions.amount from every prescription that references a particular shipment_id.  It will then verify that the current stock is consistent with the amount prescribed and written off.

10.  A 'management' UI that is used to do run the verification routines and do the initial database setup calls.

-----

Questions:

Q1.  Figure out how NDC's should be handled.
	A1.  Make a large enough char field and store them.  NDC's can be of several forms so allow for that and don't rely on them to be meaningful.

Q2.  Is some information not allowed to be changed after creation?  IE: how many units were in a shipment.
	A2.  

Q3.  Are labels that will be printed all the same physical size?
	A3.  Yes for now.

Q4.  Do liquid medications that share the same NDC come in identical same strengths and sizes?
	A4. Elixers and suspensions do
